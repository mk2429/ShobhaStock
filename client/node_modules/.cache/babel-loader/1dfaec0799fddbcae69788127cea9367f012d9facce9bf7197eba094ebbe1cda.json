{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ShobhaAd\\\\frontend\\\\src\\\\Components\\\\EditStock.jsx\",\n  _s = $RefreshSig$();\n// EditStock.js\nimport React, { useEffect, useState } from 'react';\nimport EditProductCard from './EditProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditStock() {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // Fetch all products from the backend API when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/api/products').then(response => response.json()).then(data => setProducts(data)).catch(error => console.error('Error fetching products:', error));\n  }, []);\n\n  // Update the product list with edited details\n  const handleUpdateProduct = updatedProduct => {\n    setProducts(prevProducts => prevProducts.map(product => product._id === updatedProduct._id ? updatedProduct : product));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-stock-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(EditProductCard, {\n        pname: product.pname,\n        cname: product.cname,\n        bname: product.bname,\n        pimage: product.logo,\n        price: product.price,\n        pid: product._id,\n        quantity: product.quantity,\n        onUpdateProduct: handleUpdateProduct\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(EditStock, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = EditStock;\nvar _c;\n$RefreshReg$(_c, \"EditStock\");","map":{"version":3,"names":["React","useEffect","useState","EditProductCard","jsxDEV","_jsxDEV","EditStock","_s","products","setProducts","fetch","then","response","json","data","catch","error","console","handleUpdateProduct","updatedProduct","prevProducts","map","product","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","pname","cname","bname","pimage","logo","price","pid","quantity","onUpdateProduct","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ShobhaAd/frontend/src/Components/EditStock.jsx"],"sourcesContent":["// EditStock.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport EditProductCard from './EditProductCard';\r\n\r\nexport default function EditStock() {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    // Fetch all products from the backend API when the component mounts\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/api/products')\r\n            .then((response) => response.json())\r\n            .then((data) => setProducts(data))\r\n            .catch((error) => console.error('Error fetching products:', error));\r\n    }, []);\r\n\r\n    // Update the product list with edited details\r\n    const handleUpdateProduct = (updatedProduct) => {\r\n        setProducts((prevProducts) =>\r\n            prevProducts.map((product) =>\r\n                product._id === updatedProduct._id ? updatedProduct : product\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"edit-stock-container\">\r\n            <h2>Edit Stock</h2>\r\n            <div className=\"product-grid\">\r\n                {products.map((product) => (\r\n                    <EditProductCard\r\n                        key={product._id}\r\n                        pname={product.pname}\r\n                        cname={product.cname}\r\n                        bname={product.bname}\r\n                        pimage={product.logo}\r\n                        price={product.price}\r\n                        pid={product._id}\r\n                        quantity={product.quantity}\r\n                        onUpdateProduct={handleUpdateProduct}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,WAAW,CAACK,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,mBAAmB,GAAIC,cAAc,IAAK;IAC5CV,WAAW,CAAEW,YAAY,IACrBA,YAAY,CAACC,GAAG,CAAEC,OAAO,IACrBA,OAAO,CAACC,GAAG,KAAKJ,cAAc,CAACI,GAAG,GAAGJ,cAAc,GAAGG,OAC1D,CACJ,CAAC;EACL,CAAC;EAED,oBACIjB,OAAA;IAAKmB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBjB,QAAQ,CAACa,GAAG,CAAEC,OAAO,iBAClBjB,OAAA,CAACF,eAAe;QAEZ2B,KAAK,EAAER,OAAO,CAACQ,KAAM;QACrBC,KAAK,EAAET,OAAO,CAACS,KAAM;QACrBC,KAAK,EAAEV,OAAO,CAACU,KAAM;QACrBC,MAAM,EAAEX,OAAO,CAACY,IAAK;QACrBC,KAAK,EAAEb,OAAO,CAACa,KAAM;QACrBC,GAAG,EAAEd,OAAO,CAACC,GAAI;QACjBc,QAAQ,EAAEf,OAAO,CAACe,QAAS;QAC3BC,eAAe,EAAEpB;MAAoB,GARhCI,OAAO,CAACC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtB,EAAA,CAxCuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\ShobhaAd\\\\frontend\\\\src\\\\Components\\\\ProductTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductTable() {\n  _s();\n  const [products, setProducts] = useState([]); // State to hold product data\n  const [loading, setLoading] = useState(true); // State to manage loading status\n  const [error, setError] = useState(null); // State to manage errors\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/getproducts', {\n          method: 'POST',\n          // Change to POST request\n          headers: {\n            'Content-Type': 'application/json' // Set the Content-Type to JSON\n          },\n          body: JSON.stringify({\n            bname: 'All Brands',\n            // Include bname\n            cname: 'All Categories' // Include cname\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch products');\n        }\n        const data = await response.json();\n        setProducts(data); // Assuming the API returns an array of products\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false); // Set loading to false once data is fetched\n      }\n    };\n    fetchProducts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this); // Loading message while fetching\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger text-center mt-4\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this); // Display error if any\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"QUANTITY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PRICE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.pname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"\\u20B9\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductTable, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductTable;\nvar _c;\n$RefreshReg$(_c, \"ProductTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductTable","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","response","fetch","method","headers","body","JSON","stringify","bname","cname","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","index","pname","quantity","price","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/ShobhaAd/frontend/src/Components/ProductTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport default function ProductTable() {\r\n  const [products, setProducts] = useState([]); // State to hold product data\r\n  const [loading, setLoading] = useState(true); // State to manage loading status\r\n  const [error, setError] = useState(null); // State to manage errors\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/getproducts', {\r\n          method: 'POST', // Change to POST request\r\n          headers: {\r\n            'Content-Type': 'application/json', // Set the Content-Type to JSON\r\n          },\r\n          body: JSON.stringify({\r\n            bname: 'All Brands', // Include bname\r\n            cname: 'All Categories', // Include cname\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch products');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setProducts(data); // Assuming the API returns an array of products\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center mt-4\">Loading...</div>; // Loading message while fetching\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-danger text-center mt-4\">Error: {error}</div>; // Display error if any\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-center mb-4\">Product List</h2>\r\n      <table className=\"table table-striped table-bordered\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>PNAME</th>\r\n            <th>QUANTITY</th>\r\n            <th>PRICE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product, index) => (\r\n            <tr key={index}>\r\n              <td>{product.pname}</td> {/* Assuming the API returns pname */}\r\n              <td>{product.quantity}</td> {/* Assuming the API returns quantity */}\r\n              <td>â‚¹{product.price}</td> {/* Assuming the API returns price */}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}